// Generated from Schedule.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,13,94,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,4,7,79,8,7,
11,7,12,7,80,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,0,0,13,
1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,1,0,2,1,
0,48,57,3,0,9,10,13,13,32,32,94,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,1,27,1,0,0,0,3,35,1,
0,0,0,5,44,1,0,0,0,7,52,1,0,0,0,9,59,1,0,0,0,11,67,1,0,0,0,13,75,1,0,0,0,
15,78,1,0,0,0,17,84,1,0,0,0,19,86,1,0,0,0,21,88,1,0,0,0,23,90,1,0,0,0,25,
92,1,0,0,0,27,28,5,64,0,0,28,29,5,121,0,0,29,30,5,101,0,0,30,31,5,97,0,0,
31,32,5,114,0,0,32,33,5,108,0,0,33,34,5,121,0,0,34,2,1,0,0,0,35,36,5,64,
0,0,36,37,5,109,0,0,37,38,5,111,0,0,38,39,5,110,0,0,39,40,5,116,0,0,40,41,
5,104,0,0,41,42,5,108,0,0,42,43,5,121,0,0,43,4,1,0,0,0,44,45,5,64,0,0,45,
46,5,119,0,0,46,47,5,101,0,0,47,48,5,101,0,0,48,49,5,107,0,0,49,50,5,108,
0,0,50,51,5,121,0,0,51,6,1,0,0,0,52,53,5,64,0,0,53,54,5,100,0,0,54,55,5,
97,0,0,55,56,5,105,0,0,56,57,5,108,0,0,57,58,5,121,0,0,58,8,1,0,0,0,59,60,
5,64,0,0,60,61,5,104,0,0,61,62,5,111,0,0,62,63,5,117,0,0,63,64,5,114,0,0,
64,65,5,108,0,0,65,66,5,121,0,0,66,10,1,0,0,0,67,68,5,64,0,0,68,69,5,114,
0,0,69,70,5,101,0,0,70,71,5,98,0,0,71,72,5,111,0,0,72,73,5,111,0,0,73,74,
5,116,0,0,74,12,1,0,0,0,75,76,7,0,0,0,76,14,1,0,0,0,77,79,7,1,0,0,78,77,
1,0,0,0,79,80,1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,81,82,1,0,0,0,82,83,6,
7,0,0,83,16,1,0,0,0,84,85,5,42,0,0,85,18,1,0,0,0,86,87,5,45,0,0,87,20,1,
0,0,0,88,89,5,47,0,0,89,22,1,0,0,0,90,91,5,44,0,0,91,24,1,0,0,0,92,93,5,
64,0,0,93,26,1,0,0,0,2,0,80,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ScheduleLexer extends antlr4.Lexer {

    static grammarFileName = "Schedule.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'@yearly'", "'@monthly'", "'@weekly'", "'@daily'", 
                         "'@hourly'", "'@reboot'", null, null, "'*'", "'-'", 
                         "'/'", "','", "'@'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, "DIGIT", 
                          "WS", "STAR", "DASH", "SLASH", "COMMA", "AT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "DIGIT", 
                      "WS", "STAR", "DASH", "SLASH", "COMMA", "AT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

ScheduleLexer.EOF = antlr4.Token.EOF;
ScheduleLexer.T__0 = 1;
ScheduleLexer.T__1 = 2;
ScheduleLexer.T__2 = 3;
ScheduleLexer.T__3 = 4;
ScheduleLexer.T__4 = 5;
ScheduleLexer.T__5 = 6;
ScheduleLexer.DIGIT = 7;
ScheduleLexer.WS = 8;
ScheduleLexer.STAR = 9;
ScheduleLexer.DASH = 10;
ScheduleLexer.SLASH = 11;
ScheduleLexer.COMMA = 12;
ScheduleLexer.AT = 13;



